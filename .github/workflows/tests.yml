name: Run Tests

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Create initial comment
        uses: actions/github-script@v6
        id: create_comment
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const commentBody = 'üöÄ Running tests... Please wait for the results! üïê';
            const { data: { id: commentId } } = await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });
            core.setOutput('comment_id', commentId);

      - name: Install dependencies
        uses: ./.github/actions/install-deps

      - name: Run tests
        id: run_tests
        run: |
          yarn test > test_logs.txt 2>&1
          echo "::set-output name=logs::$(cat test_logs.txt)"
          echo "::set-output name=status::$?"

      - name: Check test logs
        run: |
          cat test_logs.txt

      - name: Update comment with test results
        uses: actions/github-script@v6
        if: always() && github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const commentId = process.env.COMMENT_ID;
            const testLogs = process.env.TEST_LOGS;
            const testStatus = process.env.TEST_STATUS;

            let commentBody = '';
            let emoji = '';

            if (testStatus === '0') {
              commentBody = '‚úÖ Tests passed successfully! üéâ\n\n';
              emoji = 'üíö';
            } else {
              commentBody = '‚ùå Tests failed for this pull request. üòû\n\n';
              emoji = '‚ù§Ô∏è';
            }

            commentBody += `<details><summary>Test Logs</summary>\n\n\`\`\`\n${testLogs}\n\`\`\`\n</details>`;

            if (commentId) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: commentId,
                body: commentBody
              });
            }

            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: [`tests-${testStatus === '0' ? 'success' : 'failure'}${emoji}`]
            });
        env:
          COMMENT_ID: ${{ steps.create_comment.outputs.comment_id }}
          TEST_LOGS: ${{ steps.run_tests.outputs.logs }}
          TEST_STATUS: ${{ steps.run_tests.outputs.status }}
